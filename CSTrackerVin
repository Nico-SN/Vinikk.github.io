<!DOCTYPE html>
<html lang="fr">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Vinikk CS2 Tracker ‚Äî Connexion</title>
<script src="https://cdn.tailwindcss.com"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<style>
  :root {
    --bg: #1b1c1e;
    --panel: #2a2b2e;
    --text: #ececec;
    --accent: #ffd369;
    --accent2: #dc582a;
  }
  body {
    background-color: var(--bg);
    color: var(--text);
    font-family: 'Poppins', sans-serif;
  }
  .card {
    background: var(--panel);
    border-radius: 16px;
    box-shadow: 0 4px 14px rgba(0,0,0,.4);
  }
  input {
    background: rgba(255,255,255,0.05);
    border: 1px solid rgba(255,255,255,0.1);
    border-radius: 8px;
    color: var(--text);
    padding: .6rem .8rem;
    width: 100%;
  }
</style>
</head>
<body class="min-h-screen flex items-center justify-center p-6">

<!-- Formulaire de connexion -->
<div id="setupForm" class="card p-8 max-w-md w-full space-y-5">
  <h1 class="text-2xl font-bold text-center mb-2">
    üéØ <span class="text-[var(--accent)]">Vinikk</span> CS2 Tracker
  </h1>
  <p class="text-sm opacity-70 text-center">Entrez vos informations pour r√©cup√©rer vos statistiques.</p>

  <div class="space-y-2">
    <label for="steamId">SteamID64</label>
    <input type="text" id="steamId" placeholder="7656119xxxxxxxxxx" />
  </div>
  <div class="space-y-2">
    <label for="leetifyId">Identifiant Leetify (m√™me que SteamID64)</label>
    <input type="text" id="leetifyId" placeholder="7656119xxxxxxxxxx" />
  </div>
  <div class="space-y-2">
    <label for="steamKey">Cl√© API Steam (facultative)</label>
    <input type="password" id="steamKey" placeholder="Laissez vide si vous n‚Äôen avez pas" />
  </div>

  <button id="connectBtn" class="bg-[var(--accent)] text-black font-semibold py-2 w-full rounded-lg hover:brightness-110">
    Se connecter
  </button>

  <p class="text-xs text-center opacity-70 mt-4">
    Les donn√©es proviennent des APIs publiques de Steam et Leetify.<br>
    Aucune information n‚Äôest stock√©e.
  </p>
</div>

<!-- Tableau de bord -->
<div id="dashboard" class="hidden w-full max-w-6xl mx-auto space-y-6">
  <header class="flex items-center justify-between p-4 card mt-8">
    <div class="flex items-center gap-3">
      <img id="avatar" src="" alt="avatar" class="w-14 h-14 rounded-lg border border-white/10">
      <div>
        <h2 id="playerName" class="text-xl font-semibold">Profil</h2>
        <p id="playerRank" class="text-sm opacity-80">Chargement...</p>
      </div>
    </div>
    <button id="backBtn" class="bg-white/10 px-4 py-2 rounded-lg hover:bg-white/20">üîô Retour</button>
  </header>

  <section class="grid grid-cols-2 md:grid-cols-4 gap-4">
    <div class="card p-4 text-center"><h3>KD Ratio</h3><p id="kd" class="text-2xl font-bold text-[var(--accent)]">--</p></div>
    <div class="card p-4 text-center"><h3>Winrate</h3><p id="win" class="text-2xl font-bold text-[var(--accent)]">--</p></div>
    <div class="card p-4 text-center"><h3>Headshot %</h3><p id="hs" class="text-2xl font-bold text-[var(--accent)]">--</p></div>
    <div class="card p-4 text-center"><h3>Heures</h3><p id="playtime" class="text-2xl font-bold text-[var(--accent)]">--</p></div>
  </section>

  <section class="card p-4">
    <h3 class="font-semibold mb-3">Derniers matchs</h3>
    <table class="min-w-full text-sm" id="matchesTable">
      <thead class="opacity-70 border-b border-white/10">
        <tr><th>Date</th><th>Map</th><th>Kills</th><th>Deaths</th><th>KD</th><th>R√©sultat</th></tr>
      </thead>
      <tbody id="matchesBody"></tbody>
    </table>
  </section>
</div>

<script>
const form = document.getElementById('setupForm');
const dashboard = document.getElementById('dashboard');
const connectBtn = document.getElementById('connectBtn');
const backBtn = document.getElementById('backBtn');

connectBtn.addEventListener('click', async () => {
  const steamId = document.getElementById('steamId').value.trim();
  const leetifyId = document.getElementById('leetifyId').value.trim();
  const steamKey = document.getElementById('steamKey').value.trim();

  if (!steamId || !leetifyId) {
    alert('Merci de renseigner au moins le SteamID64 et l‚ÄôID Leetify.');
    return;
  }

  form.classList.add('hidden');
  dashboard.classList.remove('hidden');
  document.getElementById('playerName').textContent = 'Chargement...';

  // Steam (facultatif)
  if (steamKey) {
    try {
      const url = `https://api.steampowered.com/ISteamUser/GetPlayerSummaries/v2/?key=${steamKey}&steamids=${steamId}`;
      const res = await fetch(url);
      const data = await res.json();
      const player = data.response.players[0];
      if (player) {
        document.getElementById('avatar').src = player.avatarfull;
        document.getElementById('playerName').textContent = player.personaname;
        document.getElementById('playerRank').textContent = player.loccountrycode || 'Profil Steam';
      }
    } catch(e) {
      console.warn('Erreur Steam:', e);
    }
  }

  // Leetify (public API)
  try {
    const res = await fetch(`https://api-public.cs-prod.leetify.com/player/${leetifyId}`);
    const data = await res.json();

    document.getElementById('kd').textContent = (data.kd ?? '--');
    document.getElementById('win').textContent = (data.winRate ? data.winRate + '%' : '--');
    document.getElementById('hs').textContent = (data.headshotPct ? data.headshotPct + '%' : '--');
    document.getElementById('playtime').textContent = (data.totalPlaytimeHours ? data.totalPlaytimeHours + ' h' : '--');
  } catch(e) {
    console.warn('Erreur Leetify:', e);
  }

  // R√©cup matchs r√©cents
  try {
    const res = await fetch(`https://api-public.cs-prod.leetify.com/matches/recent/${leetifyId}`);
    const matches = await res.json();
    const body = document.getElementById('matchesBody');
    body.innerHTML = '';
    matches.forEach(m => {
      const tr = document.createElement('tr');
      tr.innerHTML = `
        <td>${new Date(m.date).toLocaleDateString()}</td>
        <td>${m.mapName}</td>
        <td>${m.kills}</td>
        <td>${m.deaths}</td>
        <td>${(m.kills/m.deaths).toFixed(2)}</td>
        <td>${m.result === 'win' ? '‚úÖ' : '‚ùå'}</td>
      `;
      body.appendChild(tr);
    });
  } catch(e) {
    console.warn('Erreur matchs Leetify:', e);
  }
});

backBtn.addEventListener('click', () => {
  dashboard.classList.add('hidden');
  form.classList.remove('hidden');
});
</script>

</body>
</html>
